#version 120

uniform sampler2D ShadowMapSampler;
uniform vec3 lightDir;

varying   vec4   v_diffuse;
varying   vec4   v_ShadowMapProjection;
varying   float  v_cosTheta;

const vec2 poissonDisk[4] = vec2[]
(
  vec2( -0.94201624,  -0.39906216 ),
  vec2(  0.94558609,  -0.76890725 ),
  vec2( -0.094184101, -0.92938870 ),
  vec2(  0.34495938,   0.29387760 )
);

void main()
{
    vec2  texCoord = (v_ShadowMapProjection.xy / v_ShadowMapProjection.w + vec2(1.0, 1.0)) * 0.5;
    float pixelDepth = (v_ShadowMapProjection.z / v_ShadowMapProjection.w + 1.0) * 0.5;
    //float pixelDepth = v_ShadowMapProjection.z / v_ShadowMapProjection.w;


    //to avoid shadow acne
    float bias = 0.005 * tan(acos(v_cosTheta)); // cosTheta is dot( n,l ), clamped between 0 and 1
    bias = clamp(bias, 0, 0.01);
    pixelDepth -= bias;

    //PCF
    float percentInLight = 1.0;
    for (int i = 0; i < 4; ++i)
    {
        float texDepth = texture2D(ShadowMapSampler, texCoord + poissonDisk[i] / 2000.0).x;
        if (texDepth < pixelDepth)
        {
            percentInLight -= 0.2;
        }
    }
	
    gl_FragColor = v_diffuse * percentInLight + vec4(0.25, 0.25, 0.25, 1.0);
}
